services:
  web:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.app
    expose:
      - 80
    depends_on:
      db:
        condition: service_healthy
    links:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.fastapi.rule=Host(`gpt.anyvm.tech`)"
      - "traefik.http.routers.fastapi.tls=true"
      - "traefik.http.routers.fastapi.tls.certresolver=letsencrypt"

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    expose:
      - 5432
    environment:
      - POSTGRES_USER=user
      - POSTGRES_PASSWORD=aaaaaaaaaa
      - POSTGRES_DB=postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  traefik:
    build:
      context: .
      dockerfile: ./docker/Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "../traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"

volumes:
  postgres_data_prod:
  traefik-public-certificates:
